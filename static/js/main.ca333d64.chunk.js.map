{"version":3,"sources":["components/TVShowQuery/TVShowQuery.js","App.js","index.js"],"names":["TVShowQuery","useState","substr","setSubstr","tvShowList","setTvShowList","printTVShowNames","tvData","i","length","console","log","show","name","className","onChange","event","target","value","placeholder","onClick","fetch","then","response","json","data","sort","a","b","catch","alert","map","item","image","medium","key","id","src","alt","App","ReactDOM","render","document","getElementById"],"mappings":"oSA6DeA,MA1Df,WAAwB,IAAD,EACSC,mBAAS,IADlB,mBACZC,EADY,KACJC,EADI,OAEiBF,mBAAS,IAF1B,mBAEZG,EAFY,KAEAC,EAFA,KA2BbC,EAAmB,SAACC,GACtB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAOE,OAAQD,IAC/BE,QAAQC,IAAIJ,EAAOC,GAAGI,KAAKC,OAInC,OACI,6BACI,yBAAKC,UAAU,UACX,8EACA,yBAAKA,UAAU,kBACf,2BAAOC,SAAU,SAACC,GAAD,OAAWb,EAAUa,EAAMC,OAAOC,QAAQC,YAAY,cAAcD,MAAOhB,IAC5F,4BAAQkB,QAAS,WAjCzBC,MAAM,wCAA0CnB,GAC3CoB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFA,EAAKC,MAAK,SAACC,EAAGC,GACV,OAAID,EAAEf,KAAKC,KAAOe,EAAEhB,KAAKC,MACb,EAERc,EAAEf,KAAKC,KAAOe,EAAEhB,KAAKC,KACd,EAEJ,KAEXP,EAAiBmB,GACjBpB,EAAcoB,GACdtB,EAAU,OAEb0B,OAAM,WACHC,MAAM,sDAgBN,YAIA1B,EAAW2B,KAAI,SAACC,GAAU,IAAD,IACrB,OACI,UAAAA,EAAKpB,KAAKqB,aAAV,eAAiBC,SACjB,yBAAKC,IAAKH,EAAKpB,KAAKwB,IAChB,4BAAMJ,EAAKpB,KAAKC,MAChB,yBAAKwB,IAAG,UAAEL,EAAKpB,KAAKqB,aAAZ,aAAE,EAAiBC,OAAQI,IAAI,cACvC,mCCxCbC,MARf,WACE,OACE,yBAAKzB,UAAU,OACb,kBAAC,EAAD,QCDN0B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ca333d64.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './TVShowQuery.css';\n\nfunction TVShowQuery() {\n    const [substr, setSubstr] = useState(\"\");\n    const [tvShowList, setTvShowList] = useState([]);\n\n    const getTVShowNames = () => {\n\n        fetch(\"http://api.tvmaze.com/search/shows?q=\" + substr)\n            .then(response => response.json())\n            .then(data => {\n                data.sort((a, b) => {\n                    if (a.show.name < b.show.name) {\n                        return -1;\n                    }\n                    if (a.show.name > b.show.name) {\n                        return 1;\n                    }\n                    return 0;\n                });\n                printTVShowNames(data);\n                setTvShowList(data);\n                setSubstr('');\n            })\n            .catch(() => {\n                alert(\"There was an error retrieving search results.\")\n            });\n    };\n\n    const printTVShowNames = (tvData) => {\n        for (let i = 0; i < tvData.length; i++) {\n            console.log(tvData[i].show.name)\n        }\n    };\n\n    return (\n        <div>\n            <div className=\"header\">\n                <h3>Input the name of the show you want to search:</h3>\n                <div className=\"searchFunction\">\n                <input onChange={(event) => setSubstr(event.target.value)} placeholder=\"Search Name\" value={substr}></input>\n                <button onClick={() => getTVShowNames()}>Search</button>\n                </div>\n            </div>\n                {\n                tvShowList.map((item) => {\n                    return (\n                        item.show.image?.medium &&\n                        <div key={item.show.id}>\n                            <h3 >{item.show.name}</h3>\n                            <img src={item.show.image?.medium} alt=\"showImage\"></img>\n                            <hr />\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default TVShowQuery;\n","import React from 'react';\nimport './App.css';\nimport TVShowQuery from './components/TVShowQuery/TVShowQuery';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TVShowQuery />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}